networks:
  db:
    driver: bridge
  cache:
    driver: bridge
  messaging:
    driver: bridge

volumes:
  restaurant_db:
  kafka_data:
  redis_cache:

services:
  backend:
    build: .
    ports:
      - "8080:8080"
    networks:
      - db
      - cache
      - messaging

  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_USER=bonrecreme
      - POSTGRES_PASSWORD=bonrecremepassword
    ports:
      - '5432:5432'
    networks:
      - db
    volumes:
      - restaurant_db:/var/lib/postgresql/data
      - ./docker/database/init_db.sql:/docker-entrypoint-initdb.d/init.sql
  redis:
    image: 'redis:latest'
    ports:
      - '6379:6379'

    volumes:
      - redis_cache:/cache

    networks:
      - cache

  kafka:
    image: docker.io/bitnami/kafka:3.4
    hostname: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2

    networks:
      - messaging
