networks:
  db:
    driver: bridge
  cache:
    driver: bridge
  messaging:
    driver: bridge

volumes:
  restaurant_db:
services:
  backend:
    build: .
    ports:
      - "8080:8080"
    networks:
      - db
      - cache
      - messaging

  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=restaurant_db'
      - 'POSTGRES_USER=chef'
      - 'POSTGRES_PASSWORD=chef_pass'
    ports:
      - '5432:5432'
    networks:
      - db
    volumes:
      - restaurant_db:/var/lib/postgresql/data
  redis:
    image: 'redis:latest'
    ports:
      - '6379:6379'
    networks:
      - cache
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - 'KAFKA_CFG_NODE_ID=0'
      - 'KAFKA_CFG_PROCESS_ROLES=controller,broker'
      - 'KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093'
      - 'KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      - 'KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093'
      - 'KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER'
      - 'ALLOW_PLAINTEXT_LISTENER=yes'
    networks:
      - messaging
